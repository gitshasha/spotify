{"version":3,"sources":["useAuth.js","Circle.js","Register.js","Dashboard.js","Login.js","Loginuser.js","App.js","index.js"],"names":["useAuth","Circle","genrescore","console","log","className","Object","keys","map","data","ind","viewBox","strokeDasharray","d","Register","useState","username","setusername","useremail","setuseremail","password","setpassword","navigate","useNavigate","Container","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","value","Text","Button","onClick","axios","post","email","then","window","localStorage","setItem","_id","catch","err","spotifyApi","SpotifyWebApi","clientId","Dashboard","code","getItem","accessToken","setAccessToken","useEffect","res","history","pushState","search","allgenre","setallgenre","setgenrescore","setSearchResults","cancel","searchTracks","body","tracks","items","track","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","getMyTopArtists","limit","topArtists","a","i","push","genres","b","sum","length","j","undefined","keysSorted","sort","a1","b1","score","style","user","put","userId","genre","topgenre","Login","token","setToken","hash","URLSearchParams","location","get","minHeight","href","Loginuser","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63fb6828.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction useAuth(code) {\r\n  const [accessToken, setAccessToken] = useState();\r\n  const [refreshToken, setRefreshToken] = useState();\r\n  const [expiresIn, setExpiresIn] = useState();\r\n\r\n  useEffect(() => {\r\n    const token = window.localStorage.getItem(\"token\");\r\n    console.log(token === code);\r\n    if (token != code) {\r\n      axios\r\n        .post(\"http://localhost:3001/login\", {\r\n          code,\r\n        })\r\n        .then((res) => {\r\n          setAccessToken(res.data.accessToken);\r\n          setRefreshToken(res.data.refreshToken);\r\n          setExpiresIn(res.data.expiresIn);\r\n          window.history.pushState({}, null, \"/\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [code]);\r\n\r\n  useEffect(() => {\r\n    if (!refreshToken || !expiresIn) return;\r\n    const interval = setInterval(() => {\r\n      axios\r\n        .post(\"http://localhost:3001/refresh\", {\r\n          refreshToken,\r\n        })\r\n        .then((res) => {\r\n          setAccessToken(res.data.accessToken);\r\n          setExpiresIn(res.data.expiresIn);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }, (expiresIn - 60) * 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [refreshToken, expiresIn]);\r\n\r\n  return accessToken;\r\n}\r\nexport default useAuth;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nfunction Circle({ genrescore }) {\r\n  console.log(genrescore);\r\n  return (\r\n    <div className=\"alltop\">\r\n      {genrescore &&\r\n        Object.keys(genrescore).map((data, ind) => (\r\n          <div className=\"topgenre\" key={ind}>\r\n            <div className=\"genrename\">{data}</div>{\" \"}\r\n            <svg viewBox=\"0 0 36 36\" className=\"circular-chart\">\r\n              <path\r\n                className=\"circle\"\r\n                strokeDasharray={[genrescore[data], 100]}\r\n                d=\"M18 2.0845\r\n      a 15.9155 15.9155 0 0 1 0 31.831\r\n      a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Circle;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nfunction Register() {\r\n  const [username, setusername] = useState(\"\");\r\n  const [useremail, setuseremail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  function postdet() {\r\n    if (username != \"\" && password != \"\") {\r\n      axios\r\n        .post(\"http://localhost:3001/api/auth/register\", {\r\n          email: useremail,\r\n          username: username,\r\n          password: password,\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n          window.localStorage.setItem(\"usertoken\", data.data._id);\r\n          navigate(\"/\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type=\"Text\"\r\n            placeholder=\"Username\"\r\n            onChange={(e) => {\r\n              setusername(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => {\r\n              setuseremail(e.target.value);\r\n            }}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={(e) => {\r\n              setpassword(e.target.value);\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button\r\n          onClick={() => {\r\n            postdet();\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import { useState, useEffect } from \"react\";\r\nimport useAuth from \"./useAuth\";\r\n// import Player from \"./Player\";\r\nimport TrackSearchResult from \"./TrackSearchResult\";\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport axios from \"axios\";\r\nimport Circle from \"./Circle\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Userform from \"./Userform\";\r\nimport Register from \"./Register\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Outlet } from \"react-router-dom\";\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: \"db564f6b4a1e41bab7cc3e8b4df55bf7\",\r\n});\r\n\r\nfunction Dashboard({ code }) {\r\n  // const accessToken = useAuth(code);\r\n  const [accessToken, setAccessToken] = useState(\r\n    window.localStorage.getItem(\"accesstoken\")\r\n  );\r\n  const [token, settoken] = useState(window.localStorage.getItem(\"token\"));\r\n  useEffect(() => {\r\n    const acc = window.localStorage.getItem(\"accesstoken\");\r\n    if (acc === null) {\r\n      axios\r\n        .post(\"http://localhost:3001/login\", {\r\n          code,\r\n        })\r\n        .then((res) => {\r\n          setAccessToken(res.data.accessToken);\r\n          window.localStorage.setItem(\"accesstoken\", res.data.accessToken);\r\n          // setRefreshToken(res.data.refreshToken);\r\n          // setExpiresIn(res.data.expiresIn);\r\n          window.history.pushState({}, null, \"/\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [code]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [allgenre, setallgenre] = useState([]);\r\n  const [genrescore, setgenrescore] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [playingTrack, setPlayingTrack] = useState();\r\n  const [counter, setcounter] = useState(0);\r\n  const [lyrics, setLyrics] = useState(\"\");\r\n  const [user, setuser] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  function chooseTrack(track) {\r\n    setPlayingTrack(track);\r\n    setSearch(\"\");\r\n    setLyrics(\"\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.setAccessToken(accessToken);\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (!search) return setSearchResults([]);\r\n    if (!accessToken) return;\r\n\r\n    let cancel = false;\r\n    spotifyApi.searchTracks(search).then((res) => {\r\n      if (cancel) return;\r\n      setSearchResults(\r\n        res.body.tracks.items.map((track) => {\r\n          const smallestAlbumImage = track.album.images.reduce(\r\n            (smallest, image) => {\r\n              if (image.height < smallest.height) return image;\r\n              return smallest;\r\n            },\r\n            track.album.images[0]\r\n          );\r\n\r\n          return {\r\n            artist: track.artists[0].name,\r\n            title: track.name,\r\n            uri: track.uri,\r\n            albumUrl: smallestAlbumImage.url,\r\n          };\r\n        })\r\n      );\r\n    });\r\n\r\n    return () => (cancel = true);\r\n  }, [search, accessToken]);\r\n\r\n  useEffect(() => {\r\n    spotifyApi.getMyTopArtists({ limit: 50 }).then(\r\n      function (data) {\r\n        let topArtists = data.body.items;\r\n        let a = [];\r\n\r\n        topArtists.map((data, i) => {\r\n          a.push(data.genres);\r\n        });\r\n        const b = {};\r\n        let sum = 0;\r\n        for (let i = 0; i < a.length; i++) {\r\n          for (let j = 0; j < a[i].length; j++) {\r\n            if (b[a[i][j]] == undefined) {\r\n              b[a[i][j]] = 1;\r\n            } else b[a[i][j]]++;\r\n          }\r\n        }\r\n        for (const i in b) {\r\n          sum = sum + b[i];\r\n        }\r\n\r\n        var keysSorted = Object.keys(b).sort(function (a1, b1) {\r\n          return b[b1] - b[a1];\r\n        });\r\n        setallgenre(keysSorted);\r\n        var score = {};\r\n        for (let i = 0; i < 3; i++) {\r\n          // score.push((b[keysSorted[i]] / sum) * 100);\r\n          score[keysSorted[i]] = (b[keysSorted[i]] / sum) * 100;\r\n        }\r\n        setgenrescore(score);\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    );\r\n  }, [accessToken]);\r\n  console.log(allgenre);\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      {/* <Button\r\n        onClick={() => {\r\n          spotifyApi.getMyTopTracks({ limit: 20 }).then(\r\n            function (data) {\r\n              let topTracks = data.body.items;\r\n              console.log(topTracks);\r\n            },\r\n            function (err) {\r\n              console.log(\"Something went wrong!\", err);\r\n            }\r\n          );\r\n        }}\r\n      >\r\n        ooop\r\n      </Button> */}\r\n      {/* <Form.Control\r\n        type=\"search\"\r\n        placeholder=\"Search Songs/Artists\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      />\r\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n        {searchResults.map((track) => (\r\n          <TrackSearchResult\r\n            track={track}\r\n            key={track.uri}\r\n            chooseTrack={chooseTrack}\r\n          />\r\n        ))}\r\n      </div> */}\r\n\r\n      <Circle genrescore={genrescore} />\r\n      <Button\r\n        onClick={() => {\r\n          const user = window.localStorage.getItem(\"usertoken\");\r\n          axios\r\n            .put(`http://localhost:3001/api/users/${user}`, {\r\n              userId: user,\r\n              genre: allgenre,\r\n              topgenre: genrescore,\r\n            })\r\n            .then((data) => {\r\n              console.log(data);\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\nexport default Dashboard;\r\n","import React, { useEffect, useState } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = \"http://localhost:3000\";\nconst clientId = \"db564f6b4a1e41bab7cc3e8b4df55bf7\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n];\n\nconst AUTH_URL =\n  \"https://accounts.spotify.com/authorize?client_id=db564f6b4a1e41bab7cc3e8b4df55bf7&response_type=code&redirect_uri=http://localhost:3000/&scope=streaming%20user-top-read%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state%20user-read-currently-playing%20user-read-recently-played\";\n// const AUTH_URL = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n//   \"%20\"\n// )}&response_type=token&show_dialog=true`;\nfunction Login() {\n  const [token, setToken] = useState(\"\");\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [artists, setArtists] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const username = window.localStorage.getItem(\"usertoken\");\n    if (username === null) {\n      navigate(\"/home\");\n    }\n  }, []);\n  // const getToken = () => {\n  //     let urlParams = new URLSearchParams(window.location.hash.replace(\"#\",\"?\"));\n  //     let token = urlParams.get('access_token');\n  // }\n\n  useEffect(() => {\n    const hash = new URLSearchParams(window.location.search).get(\"code\");\n\n    let token = window.localStorage.getItem(\"token\");\n\n    // getToken()\n\n    if (!token && hash) {\n      token = hash;\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n    }\n\n    setToken(token);\n  }, []);\n  return (\n    <>\n      {token ? (\n        <Dashboard code={token} />\n      ) : (\n        <Container\n          className=\"d-flex justify-content-center align-items-center\"\n          style={{ minHeight: \"100vh\" }}\n        >\n          <a className=\"btn btn-success btn-lg\" href={AUTH_URL}>\n            Login With Spotify\n          </a>\n        </Container>\n      )}\n    </>\n  );\n}\nexport default Login;\n","import React from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { Container, Form, Button } from \"react-bootstrap\";\r\nfunction Loginuser() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div>\r\n      {/* <Button\r\n        onClick={() => {\r\n          navigate(\"userlogin\");\r\n        }}\r\n      >\r\n        Login\r\n      </Button> */}\r\n      <Button\r\n        onClick={() => {\r\n          navigate(\"/register\");\r\n        }}\r\n      >\r\n        Register\r\n      </Button>\r\n\r\n      {/* <div>\r\n        <Player accessToken={accessToken} trackUri={playingTrack?.uri} />\r\n      </div> */}\r\n\r\n      <div className=\"optionoutlet\">\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loginuser;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Login from \"./Login\";\r\n// import Dashboard from \"./Dashboard\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Loginuser from \"./Loginuser\";\r\n// import Signin from \"./Signin\";\r\nimport Register from \"./Register\";\r\n// import Home from \"./Home\";\r\nimport Users from \"./Users\";\r\nimport Userform from \"./Userform\";\r\nconst code = new URLSearchParams(window.location.search).get(\"code\");\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/home\" element={<Loginuser />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        {/* <Route path=\"/users\" element={<Users />} />\r\n        <Route path=\"/userlogin\" element={<Userform />} />\r\n         <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/home\" element={<Home />} /> */}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n// code ? <Dashboard code={code} /> : <Login />\r\nexport default App;\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}